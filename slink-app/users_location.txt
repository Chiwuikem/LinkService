postgres lambda function for finding user location

import json
import os
import psycopg2
from psycopg2.extras import Json
def lambda_handler(event, context):
    conn = psycopg2.connect(
        host=os.environ['DB_HOST'],
        dbname=os.environ['DB_NAME'],
        user=os.environ['DB_USER'],
        password=os.environ['DB_PASSWORD'],
        port=os.environ.get('DB_PORT', 5432)
    )
    try:
        cur = conn.cursor()

        # Create table if it doesn't exist
        cur.execute('''
            CREATE TABLE IF NOT EXISTS address_table (
                id SERIAL PRIMARY KEY,
                address_info JSONB
            );
        ''')

        # Insert example data
        from psycopg2.extras import Json
        data_dict = {"street": "123 Main St", "city": "Springfield", "zip": "12345"}
        cur.execute(
            "INSERT INTO address_table (address_info) VALUES (%s) RETURNING id;",
            (Json(data_dict),)
        )
        inserted_id = cur.fetchone()[0]
        conn.commit()
        cur.close()

        return {
            'statusCode': 200,
            'body': f'Table ensured, inserted row with ID {inserted_id}'
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': f'Error: {str(e)}'
        }
    finally:
        conn.close()


DB_HOST
slinkdb.cpeuuq42ovqb.us-east-2.rds.amazonaws.com
DB_NAME
postgres
DB_PASSWORD
chiwuikem
DB_PORT
5432
DB_USER
adminDB